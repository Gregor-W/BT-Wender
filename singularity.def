Bootstrap: docker
From: ubuntu:18.04

%post
    chmod 755 /root
    apt-get -y update && apt-get -y upgrade
    apt-get install -y software-properties-common
    add-apt-repository -y ppa:openscad/releases
    apt-get -y update

    DEBIAN_FRONTEND=noninteractive apt-get -y install \
        build-essential \
        cmake \
        wget \
        git \
        nano \
        curl \
        vim \
        apt-utils \
        python-dev \
        python-pip \
        python3-dev \
        python3-pip \
        libglib2.0-0  \
        xvfb \
        libgl1-mesa-dev \
        libxkbcommon-x11-0 \
        libavcodec-dev \
        libavformat-dev \
        libswscale-dev \
        qt5-default \
        libqt5widgets5 \
        unity-gtk-module-common \
        unity-gtk3-module \
        xorg \
        libgl1-mesa-glx \
        mesa-utils \
        language-pack-en-base \
        libglew-dev \
        libcanberra-gtk-module \
        libcanberra-gtk3-module \
        bash \
        gcc \
        gfortran \
        g++ \
        make \
        file \
        unzip \
        python-sip \
        python-qt4 \
        libosmesa6-dev \
        meshlab \
        libhdf5-dev \
        freeglut3 \
        freeglut3-dev \
        openscad \
        blender \
        python-tk \
        ffmpeg \
        default-jdk \
        autotools-dev \
        libicu-dev \
        libbz2-dev \
		libxml2-dev \
		libeigen3-dev \
        
    mkdir -p /home/co
  
    # Install libspatialindex
    cd /home/co
	
	
    #wget https://sourceforge.net/projects/boost/files/boost/1.60.0/boost_1_60_0.tar.gz
    #tar -zxvf boost_1_60_0.tar.gz
    #cd boost_1_60_0
    #./bootstrap.sh
    #./b2
    #./b2 install
    #cd ..
	
	wget http://sourceforge.net/projects/boost/files/boost/1.59.0/boost_1_59_0.tar.gz
	tar -zxvf boost_1_59_0.tar.gz
    cd boost_1_59_0
    ./bootstrap.sh
    ./b2
    ./b2 install
    cd ..
	
	
	git clone https://github.com/crigroup/openrave-installation.git
	cd openrave-installation
	sed -i 's/sudo/ /g' install-dependencies.sh
	sed -i 's+BOOST_SRC_DIR=~/git/boost_1_58_0+BOOST_SRC_DIR=../boost_1_59_0+g' install-dependencies.sh
	
	sed -i 's/sudo/ /g' install-osg.sh
	sed -i 's/sudo/ /g' install-fcl.sh
	sed -i 's/sudo/ /g' install-openrave.sh
	
	./install-dependencies.sh
	./install-osg.sh
	./install-fcl.sh
	./install-openrave.sh
	cd ..
	

    wget https://download.osgeo.org/libspatialindex/spatialindex-src-1.7.0.tar.gz
    tar -xzf spatialindex-src-1.7.0.tar.gz
    cd spatialindex-src-1.7.0
    ./configure
    make
    make install
    ldconfig

    # Install newest pip versions
    curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
    python get-pip.py
    python3 get-pip.py

    pip2 install --upgrade setuptools
    pip3 install --upgrade setuptools

    # Install python2 dependencies (largely very specific to get dexnet to actually run).
    pip2 install numpy==1.16.5 scipy==1.2.2 scikit-learn==0.20.4 scikit-image==0.14.5 opencv-python==4.1.2.30 pyassimp tensorflow==2.0.0 h5py networkx==2.2
    pip2 install imageio==2.6.1
    pip2 install vtk
	# Error for mayavi
    #pip2 install mayavi
    pip2 install matplotlib==2.2.4 multiprocess dill cvxopt ipython==5.8.0 Pillow==6.2.1 setproctitle trimesh
    pip2 install pyhull
    pip2 install ffmpeg-python
    pip2 install pathlib2
	pip2 install shapely
	
	# Pyrender requirements
	mkdir -p pyrender
	cd pyrender
	#wget https://github.com/mmatl/travis_debs/raw/master/xenial/mesa_18.3.3-0.deb
	#dpkg -i ./mesa_18.3.3-0.deb || true
	#apt install -y -f
	
	apt-get install -y llvm-6.0 freeglut3 freeglut3-dev
	wget ftp://ftp.freedesktop.org/pub/mesa/mesa-18.3.3.tar.gz
	tar xfv mesa-18.3.3.tar.gz
	cd mesa-18.3.3
	./configure --prefix=/usr/local                           \
            --enable-opengl --disable-gles1 --disable-gles2   \
            --disable-va --disable-xvmc --disable-vdpau       \
            --enable-shared-glapi                             \
            --disable-texture-float                           \
            --enable-gallium-llvm --enable-llvm-shared-libs   \
            --with-gallium-drivers=swrast,swr                 \
            --disable-dri --with-dri-drivers=                 \
            --disable-egl --with-egl-platforms= --disable-gbm \
            --disable-glx                                     \
            --disable-osmesa --enable-gallium-osmesa          \
            ac_cv_path_LLVM_CONFIG=llvm-config-6.0
	make -j8
	make install		
	cd ..
	
	#git clone git@github.com:mmatl/pyopengl.git
	#pip3 install ./pyopengl
	#pip3 install PyOpenGL PyOpenGL_accelerate
	
	
	pip3 uninstall -y PyOpenGL PyOpenGL_accelerate
	git clone https://github.com/mmatl/pyopengl.git
	cd pyopengl
	python3 setup.py develop
	cd accelerate
	python3 setup.py develop
	cd ..
	cd ..
	
	pip3 install pyrender
	
	
    # Install Dex-Net and dependencies.
    mkdir -p /home/co/dexnet
    cd /home/co/dexnet
    wget https://github.com/dougsm/egad/releases/download/v0.1/dexnet_deployment.zip --no-check-certificate
    unzip dexnet_deployment.zip


    # fix meshlab
    sed -i 's/meshlabserver -i/xvfb-run -a -s "-screen 0 800x600x24" meshlabserver -i/g' src/dexnet/database/mesh_processor.py

    cd deps

    # install SDFGen
    cd SDFGen
    sh install.sh
    cd ..

    # install Boost.NumPy
    cd Boost.NumPy
    sh install.sh
	echo 'export LD_LIBRARY_PATH=/usr/local/lib64:$LD_LIBRARY_PATH' >>$SINGULARITY_ENVIRONMENT
    cd ..
	
	
    # return to dex-net directory
	# Install openrave
	#mkdir openrave
	#cd openrave
	
	#git clone https://github.com/danfis/libccd.git
	#cd libccd
	#mkdir build && cd build
	#cmake -G "Unix Makefiles" ..
	#make && make install
	#cd ..
	#cd ..
	
	#git clone https://github.com/flexible-collision-library/fcl.git
	#cd fcl
	#mkdir build
	#cd build
	#cmake ..
	#cd ..
	#cd ..
	
	#git clone --branch latest_stable https://github.com/rdiankov/openrave.git
	#cd openrave
	#make
    #make install
	#rm build/CMakeCache.txt
	#cd ..
	#cd ..
	
    # install meshpy
    cd meshpy
    pip2 install -e .
    #mkdir build
    #cd build
    #cmake ..
    #make
    #cp meshpy/meshrender.so ../meshpy
    #cd ..
    #rm -rf build
    cd ..

    # install all Berkeley AUTOLAB modules
    # autolab_core
    cd autolab_core
    sed -i 's/joblib/joblib==0.14.1/g' setup.py
    python setup.py develop
    cd ..

    # perception
    cd perception
    python setup.py develop
    cd ..

    # visualization
    cd visualization
    python setup.py develop

    # dexnet
    cd ..
    cd ..
    python setup.py develop


    # Download reeb graphs.
    mkdir -p /home/co/reeb
    cd /home/co/reeb
    git clone https://github.com/dbespalov/reeb_graph.git
    cd reeb_graph
    javac src/*.java

    # Get VHACD
    cd /home/co
    wget https://github.com/kmammou/v-hacd/raw/e3acd8637397fab37423c734c6a980d7031d772f/bin/linux/testVHACD --no-check-certificate
    chmod +x testVHACD
    mv testVHACD /usr/bin/vhacd

    # Install EGAD
    cd /home/co
    git clone https://github.com/dougsm/egad.git
    cd egad
    pip3 install -e .

	
	cd ..
	
%environment
    TMPDIR=/tmp
	LD_LIBRARY_PATH=/usr/local/lib64:$LD_LIBRARY_PATH

%apprun datasetgen
    cd /home/co/egad/scripts
    xvfb-run python3 generate_dataset.py ${@}
